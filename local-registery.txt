Run a local registry:
  docker run -d -p 5000:5000 --restart=always --name registry registry:2
  docker run -d -p 5000:5000 --restart=always --name myregistry registry:2
  
Copy an image from Docker Hub to your registry
  Pull the ubuntu:16.04 image from Docker Hub.
    $ docker pull ubuntu:16.04
  Tag the image as localhost:5000/my-ubuntu. This creates an additional tag for the existing image. When the first part of 
  the tag is a hostname and port, Docker interprets this as the location of a registry, when pushing.
    $ docker tag ubuntu:16.04 localhost:5000/my-ubuntu
  Push the image to the local registry running at localhost:5000:
    $ docker push localhost:5000/my-ubuntu
  Remove the locally-cached ubuntu:16.04 and localhost:5000/my-ubuntu images, so that you can test pulling the image from 
  your registry. This does not remove the localhost:5000/my-ubuntu image from your registry.
    $ docker image remove ubuntu:16.04
    $ docker image remove localhost:5000/my-ubuntu
  Pull the localhost:5000/my-ubuntu image from your local registry.
    $ docker pull localhost:5000/my-ubuntu
Stop a local registry
  $ docker container stop registry
To remove the registry container, use docker container rm
  $ docker container stop registry && docker container rm -v registry

Examples:
ocker run -d -p 5000:5000 --restart=always --name myregistry registry:2
docker tag  dannyhui/springbootstarter:latest localhost:5000/springbootstarter
docker push localhost:5000/springbootstarter
docker image remove dannyhui/springbootstarter:latest
docker image remove localhost:5000/springbootstarter
docker pull localhost:5000/springbootstarter

https://developers.redhat.com/blog/2021/02/18/how-to-work-around-dockers-new-download-rate-limit-on-red-hat-openshift#docker_s_new_rate_limit
$ oc create secret docker-registry docker --docker-server=docker.io --docker-username=<username> --docker-password=<password> --docker-email=<email>
$ oc secrets link default docker --for=pull
$ oc new-app <username>/<image> --source-secret=docker
